<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.12.4 on win32)" generated="20250404 00:54:31.596" rpa="false" schemaversion="3">
<suite id="s1" name="Employees" source="C:\Users\amiran_arbolishvili\PycharmProjects\DQE_MID_Robot_FR\dqe_mid_rf_tests\TestCases\employees.robot">
<kw name="Connect To Database" library="DatabaseLibrary" type="SETUP">
<arg>pymssql</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<msg timestamp="20250404 00:54:31.675" level="INFO">Looking for configuration file: 'resources\db.cfg'</msg>
<msg timestamp="20250404 00:54:31.675" level="INFO">Configuration file doesn't exist</msg>
<msg timestamp="20250404 00:54:31.691" level="INFO">Connect to DB using : pymssql.connect(database='trn', user='task_4', password=***, host='localhost', port=55128, charset='UTF-8')</msg>
<status status="PASS" starttime="20250404 00:54:31.675" endtime="20250404 00:54:31.832"/>
</kw>
<test id="s1-t1" name="Check Employee Email Uniqueness" line="8">
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>SELECT email, count(*) FROM hr.employees GROUP BY email HAVING COUNT(*) &gt; 1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250404 00:54:31.832" level="INFO">${query} = SELECT email, count(*) FROM hr.employees GROUP BY email HAVING COUNT(*) &gt; 1</msg>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.832"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${emails}</var>
<arg>${query}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<msg timestamp="20250404 00:54:31.832" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT email, count(*) FROM hr.employees GROUP BY email HAVING COUNT(*) &gt; 1&lt;/code&gt;</msg>
<msg timestamp="20250404 00:54:31.832" level="INFO">Commit the transaction</msg>
<msg timestamp="20250404 00:54:31.832" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="color:black; background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;email&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250404 00:54:31.832" level="INFO">${emails} = []</msg>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.832"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${emails}</arg>
<arg>There are duplicate emails.</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250404 00:54:31.832" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.832"/>
</kw>
<doc>Check that employee emails are unique.</doc>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.832"/>
</test>
<test id="s1-t2" name="Check Employee Hire Date Validity" line="14">
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>SELECT hire_date FROM hr.employees WHERE hire_date NOT LIKE '____-__-__'</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250404 00:54:31.832" level="INFO">${query} = SELECT hire_date FROM hr.employees WHERE hire_date NOT LIKE '____-__-__'</msg>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.832"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${hire_dates}</var>
<arg>${query}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<msg timestamp="20250404 00:54:31.832" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT hire_date FROM hr.employees WHERE hire_date NOT LIKE '____-__-__'&lt;/code&gt;</msg>
<msg timestamp="20250404 00:54:31.848" level="INFO">Commit the transaction</msg>
<msg timestamp="20250404 00:54:31.848" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="color:black; background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;hire_date&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250404 00:54:31.848" level="INFO">${hire_dates} = []</msg>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.848"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${hire_dates}</arg>
<arg>All hire date is valid</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250404 00:54:31.848" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250404 00:54:31.848" endtime="20250404 00:54:31.848"/>
</kw>
<doc>Check if the employee hire date is valid.</doc>
<status status="PASS" starttime="20250404 00:54:31.832" endtime="20250404 00:54:31.848"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<status status="PASS" starttime="20250404 00:54:31.848" endtime="20250404 00:54:31.848"/>
</kw>
<status status="PASS" starttime="20250404 00:54:31.596" endtime="20250404 00:54:31.848"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Employees">Employees</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
